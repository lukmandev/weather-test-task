{"version":3,"file":"static/js/439.ac67dafd.chunk.js","mappings":"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","sources":["hooks/redux.ts","utils/transform-by-temp.ts","modules/home/components/DetailCityWeather/DayWeather.tsx","modules/home/components/DetailCityWeather/index.tsx","utils/color-by-temp.ts","modules/home/pages/detail-weather.tsx","http/api.ts","store/reducers/cities/actions.ts","store/reducers/cities/selectors.ts"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\n\nimport { AppDispatch, RootState } from \"~/store/reducer\";\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export const transformByTemp = (temp: number) => {\n\tconst calc = (temp - 15) * 2;\n\treturn `translateY(${-calc}px)`;\n};\n","import {Box, Typography} from '@mui/material';\nimport {makeStyles} from '@mui/styles';\nimport {format} from 'date-fns-tz';\n\nimport {DailyEntity} from '~/types/City';\n\ntype DayWeatherProps = {\n\tdayWeather: DailyEntity;\n};\n\nconst useOtherDayWeatherStyles = makeStyles({\n\twrapper: {\n\t\twidth: '100%',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\tborder: '1px solid #eee',\n\t\tpadding: '15px',\n\t\tborderRadius: '10px',\n\t\tbackground: 'rgba(0,0,0,0.2)',\n\t},\n\tday: {\n\t\tpadding: '5px 15px',\n\t\tbackground: '#3C3C44',\n\t\tborderRadius: '50px',\n\t\ttextAlign: 'center',\n\t\tcolor: '#fff',\n\t},\n\tweatherIcon: {},\n\ttempTitle: {\n\t\tfontWeight: 100,\n\t\tfontSize: 12,\n\t},\n});\n\nexport const OtherDayWeather = ({dayWeather}: DayWeatherProps) => {\n\tconst styles = useOtherDayWeatherStyles();\n\treturn (\n\t\t<Box className={styles.wrapper}>\n\t\t\t<Box className={styles.day}>{format(dayWeather.dt * 1000, 'eeee')}</Box>\n\t\t\t<img\n\t\t\t\tsrc={`http://openweathermap.org/img/wn/${dayWeather?.weather[0].icon}@2x.png`}\n\t\t\t\talt=\"weather icon\"\n\t\t\t\tclassName=\"w-icon\"\n\t\t\t/>\n\t\t\t<Typography className={styles.tempTitle}>\n\t\t\t\tНочью - ${dayWeather.temp.night}&#176;C\n\t\t\t</Typography>\n\t\t\t<Typography className={styles.tempTitle}>\n\t\t\t\tДнем - ${dayWeather.temp.day}&#176;C\n\t\t\t</Typography>\n\t\t</Box>\n\t);\n};\n\nconst useTodayWeatherStyles = makeStyles({\n\twrapper: {\n\t\twidth: '100%',\n\t\theight: 232,\n\t\tdisplay: 'grid',\n\t\tgridTemplateColumns: '1.2fr 1fr',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\tborder: '1px solid #000',\n\t\tpadding: '15px',\n\t\tborderRadius: '10px',\n\t\tbackground: 'rgba(0,0,0,0.2)',\n\t},\n\tday: {\n\t\tpadding: '5px 15px',\n\t\tbackground: '#3C3C44',\n\t\tborderRadius: '50px',\n\t\ttextAlign: 'center',\n\t\tcolor: '#fff',\n\t},\n\tweatherIcon: {\n\t\twidth: '100%',\n\t},\n\ttempTitle: {\n\t\tfontWeight: 100,\n\t\tfontSize: 18,\n\t\tmarginTop: 10,\n\t},\n});\n\nexport const TodayWeather = ({dayWeather}: DayWeatherProps) => {\n\tconst styles = useTodayWeatherStyles();\n\treturn (\n\t\t<Box className={styles.wrapper}>\n\t\t\t<img\n\t\t\t\tsrc={`http://openweathermap.org/img/wn/${dayWeather?.weather[0].icon}@2x.png`}\n\t\t\t\talt=\"weather icon\"\n\t\t\t\tclassName={styles.weatherIcon}\n\t\t\t/>\n\t\t\t<Box>\n\t\t\t\t<Box className={styles.day}>{format(dayWeather.dt * 1000, 'eeee')}</Box>\n\t\t\t\t<Typography className={styles.tempTitle}>\n\t\t\t\t\tНочью - ${dayWeather.temp.night}&#176;C\n\t\t\t\t</Typography>\n\t\t\t\t<Typography className={styles.tempTitle}>\n\t\t\t\t\tДнем - ${dayWeather.temp.day}&#176;C\n\t\t\t\t</Typography>\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n","import {Box, Container, Typography} from '@mui/material';\nimport {makeStyles} from '@mui/styles';\nimport {format, zonedTimeToUtc} from 'date-fns-tz';\nimport _ from 'lodash';\n\nimport {DetailCity, Hourly} from '~/types/City';\nimport {displayTempAsCssColor} from '~/utils/color-by-temp';\nimport {transformByTemp} from '~/utils/transform-by-temp';\nimport {OtherDayWeather, TodayWeather} from './DayWeather';\n\ntype DetailCityWeatherProps = {\n\tdata: DetailCity;\n};\n\nconst useStyles = makeStyles({\n\tcontainer: {\n\t\tmaxWidth: '1450px',\n\t\twidth: '100%',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'flex-start',\n\t\tjustifyContent: 'flex-start',\n\t\toverflow: 'hidden',\n\t},\n\tgridWrapper: {\n\t\twidth: '100%',\n\t\tdisplay: 'grid',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'flex-start',\n\t\tgridTemplateColumns: '3fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr',\n\t\tgridColumnGap: '10px',\n\t},\n\tcurrentInfo: {\n\t\tmaxWidth: 300,\n\t\twidth: '100%',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tbackground: 'rgba(24,24,27, 0.6)',\n\t\tpadding: '20px',\n\t\tborderRadius: '10px',\n\t\tmargin: '10px 0',\n\t\tborder: '1px solid #eee',\n\t},\n\tcurrentInfoItem: {\n\t\twidth: '100%',\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'space-between',\n\t\talignItems: 'center',\n\t},\n\tcurrentInfoTitle: {\n\t\tcolor: '#fff',\n\t},\n\tcityTime: {\n\t\tfontSize: 50,\n\t},\n\tdayWithHoursWrapper: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t},\n\tdayHoursWrapper: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'flex-start',\n\t\tflexWrap: 'wrap',\n\t\tgap: '30px',\n\t\tpadding: '60px 0',\n\t},\n\thoursBox: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tgap: '5px',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\tflexWrap: 'wrap',\n\t\tbackground: 'green',\n\t\tpadding: '10px 20px',\n\t\tborderRadius: '5px',\n\t},\n});\n\nconst DetailCityWeather = ({data}: DetailCityWeatherProps) => {\n\tconst styles = useStyles();\n\n\tconst currentInfo = {\n\t\thumidity: {\n\t\t\ttitle: 'Humidity',\n\t\t\tvalue: data.current.humidity,\n\t\t},\n\t\tpressure: {\n\t\t\ttitle: 'Pressure',\n\t\t\tvalue: data.current.pressure,\n\t\t},\n\t\twind_speed: {\n\t\t\ttitle: 'Wind Speed',\n\t\t\tvalue: data.current.wind_speed,\n\t\t},\n\t\tsunrise: {\n\t\t\ttitle: 'Sunrise',\n\t\t\tvalue: format(data.current.sunrise * 1000, 'HH:mm a'),\n\t\t},\n\t\tsunset: {\n\t\t\ttitle: 'Sunset',\n\t\t\tvalue: format(data.current.sunset * 1000, 'HH:mm a'),\n\t\t},\n\t};\n\n\tconst outHoursInfo = () => {\n\t\tconst mapByDay = _.map(data.hourly, (e: Hourly) => ({\n\t\t\t...e,\n\t\t\tday: format(e.dt * 1000, 'eee'),\n\t\t\tdt: format(e.dt * 1000, 'HH:mm'),\n\t\t}));\n\t\treturn (\n\t\t\t<Box className={styles.dayHoursWrapper}>\n\t\t\t\t{mapByDay.map((elem, i) => (\n\t\t\t\t\t<Box key={i} style={{padding: '35px 0'}}>\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tclassName={styles.hoursBox}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackground: displayTempAsCssColor(elem.temp),\n\t\t\t\t\t\t\t\ttransform: transformByTemp(elem.temp),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Typography>{elem.day}</Typography>\n\t\t\t\t\t\t\t<Typography>{elem.dt}</Typography>\n\t\t\t\t\t\t\t<Typography>{elem.temp}</Typography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t))}\n\t\t\t</Box>\n\t\t);\n\t};\n\treturn (\n\t\t<Container className={styles.container}>\n\t\t\t<Typography component=\"h1\" className={styles.cityTime}>\n\t\t\t\t{format(zonedTimeToUtc(new Date(), data.timezone), 'HH:mm:ss')}\n\t\t\t</Typography>\n\t\t\t<Box className={styles.gridWrapper}>\n\t\t\t\t{data.daily.map((elem, idx) => {\n\t\t\t\t\t// If the index is 0, then today's weather component will be returned.\n\t\t\t\t\treturn idx ? (\n\t\t\t\t\t\t<OtherDayWeather dayWeather={elem} key={idx} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<TodayWeather dayWeather={elem} key={idx} />\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Box>\n\t\t\t<Box className={styles.currentInfo}>\n\t\t\t\t{_.map(Object.entries(currentInfo), (elem) => (\n\t\t\t\t\t<Box key={elem[1].title} className={styles.currentInfoItem}>\n\t\t\t\t\t\t<Typography className={styles.currentInfoTitle}>\n\t\t\t\t\t\t\t{elem[1].title}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography className={styles.currentInfoTitle}>\n\t\t\t\t\t\t\t{elem[1].value}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t))}\n\t\t\t</Box>\n\t\t\t<Box className={styles.dayWithHoursWrapper}>{outHoursInfo()}</Box>\n\t\t</Container>\n\t);\n};\n\nexport default DetailCityWeather;\n","export const displayTempAsCssColor = (temp: number) => {\n\tvar hue = 100 + (300 * (30 - temp)) / 80;\n\tconst color = 'hsl(' + [hue, '70%', '50%'] + ')';\n\n\treturn color;\n};\n","import {Container, Typography} from '@mui/material';\nimport {makeStyles} from '@mui/styles';\nimport {useEffect} from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport SpinLoader from '~/components/SpinLoader';\nimport {useAppDispatch, useAppSelector} from '~/hooks/redux';\nimport {fetchCityWeather} from '~/store/reducers/cities/actions';\nimport {selectCitiesState} from '~/store/reducers/cities/selectors';\nimport DetailCityWeather from '../components/DetailCityWeather';\n\nconst useStyles = makeStyles({\n\tcontainer: {\n\t\tpadding: '40px 15px',\n\t},\n});\n\nconst DetailWeather = () => {\n\tconst styles = useStyles();\n\tconst dispatch = useAppDispatch();\n\tconst citiesState = useAppSelector(selectCitiesState);\n\tconst {id} = useParams();\n\n\tuseEffect(() => {\n\t\tdispatch(fetchCityWeather(id as string));\n\t}, []);\n\n\tconst outDetailCity = () => {\n\t\tif (citiesState.detailCityLoaded) {\n\t\t\tif (citiesState.detailCityError) {\n\t\t\t\treturn <Typography>{citiesState.detailCityError}</Typography>;\n\t\t\t}\n\t\t\tif (citiesState.detailCity) {\n\t\t\t\treturn <DetailCityWeather data={citiesState.detailCity} />;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\treturn (\n\t\t<Container className={styles.container} maxWidth={false}>\n\t\t\t{!citiesState.detailCityLoaded && <SpinLoader />}\n\t\t\t{outDetailCity()}\n\t\t</Container>\n\t);\n};\n\nexport default DetailWeather;\n","import axios from 'axios';\n\nconst api = axios.create({\n\tbaseURL: 'https://api.openweathermap.org',\n});\n\napi.interceptors.request.use(\n\t(config) => {\n\t\tconfig.params = {\n\t\t\t...config.params,\n\t\t\tappid: 'f9a4d9ae1e4c03a60aae940410297e18',\n\t\t\tunits: 'metric',\n\t\t};\n\t\treturn config;\n\t},\n\t(error) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport default api;\n","import {createAsyncThunk} from '@reduxjs/toolkit';\nimport _ from 'lodash';\n\nimport api from '~/http/api';\nimport cities from '~/data/cities.json';\nimport {\n\tsetCities,\n\tsetCitiesError,\n\tsetCitiesLoaded,\n\tsetDetailCity,\n\tsetDetailCityError,\n\tsetDetailCityLoaded,\n} from './reducer';\nimport {AxiosError} from 'axios';\n\nexport const fetchCities = createAsyncThunk(\n\t'fetchCities',\n\tasync (__, {dispatch}) => {\n\t\tdispatch(setCitiesLoaded(false));\n\t\tdispatch(setCitiesError(null));\n\t\tconst fetchedCitiesPromises: any = [];\n\t\tlet fetchedCities: any = [];\n\t\tfor (let i = 0; i < cities.length; i++) {\n\t\t\tconst city = cities[i];\n\t\t\tconst promise = api.get(`/data/2.5/weather?q=${city.name}&lang=ru`);\n\t\t\tfetchedCitiesPromises.push(promise);\n\t\t}\n\t\ttry {\n\t\t\tconst allPromises = await Promise.allSettled(fetchedCitiesPromises);\n\t\t\tconst filteredCities = _.filter(\n\t\t\t\tallPromises,\n\t\t\t\t(el: any) => el.status && el.value\n\t\t\t);\n\t\t\tfetchedCities = _.map(filteredCities, (el: any) => el.value.data);\n\t\t} catch (e) {}\n\t\tconst sortedCities = _.uniqBy(fetchedCities, (e: any) => e.id);\n\t\t!sortedCities.length &&\n\t\t\tdispatch(setCitiesError('Произошла какая то ошибка'));\n\t\tdispatch(setCities(sortedCities));\n\t\tdispatch(setCitiesLoaded(true));\n\t}\n);\n\nexport const fetchCityWeather = createAsyncThunk(\n\t'fetchCityWeather',\n\tasync (cityId: string, {dispatch}) => {\n\t\tdispatch(setDetailCityLoaded(false));\n\t\ttry {\n\t\t\tconst {\n\t\t\t\tdata: {\n\t\t\t\t\tcoord: {lon, lat},\n\t\t\t\t},\n\t\t\t} = await api.get(`/data/2.5/weather?id=${cityId}`);\n\t\t\tconst {data} = await api.get(\n\t\t\t\t`/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=minutely`\n\t\t\t);\n\t\t\tdispatch(setDetailCity(data));\n\t\t} catch (e) {\n\t\t\tconst error = e as AxiosError;\n\t\t\tif (error.response && error.response.status) {\n\t\t\t\tdispatch(setDetailCityError('Город не найден'));\n\t\t\t} else {\n\t\t\t\tdispatch(setDetailCityError('Произошла какая то ошибка'));\n\t\t\t}\n\t\t} finally {\n\t\t\tdispatch(setDetailCityLoaded(true));\n\t\t}\n\t}\n);\n\nexport const checkForExistence = createAsyncThunk(\n\t'checkForExistence',\n\tasync (cityTitle: string, __) => {\n\t\tconst returnedData = {\n\t\t\terror: {\n\t\t\t\thasError: false,\n\t\t\t\tmessage: '',\n\t\t\t},\n\t\t\tdata: null,\n\t\t};\n\n\t\ttry {\n\t\t\tconst {data} = await api.get(`/data/2.5/weather?q=${cityTitle}`);\n\t\t\treturnedData.data = data;\n\t\t} catch (e) {\n\t\t\treturnedData.error.hasError = true;\n\t\t\tconst error = e as AxiosError;\n\t\t\tif (error?.response?.status === 404) {\n\t\t\t\treturnedData.error.message = 'Такой город не найден';\n\t\t\t} else {\n\t\t\t\treturnedData.error.message = 'Произошла какая то ошибка';\n\t\t\t}\n\t\t} finally {\n\t\t\treturn returnedData;\n\t\t}\n\t}\n);\n","import { RootState } from \"~/store/reducer\";\n\nexport const selectCitiesState = (state: RootState) => state.cities;\n"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","transformByTemp","temp","useOtherDayWeatherStyles","makeStyles","wrapper","width","display","flexDirection","alignItems","justifyContent","border","padding","borderRadius","background","day","textAlign","color","weatherIcon","tempTitle","fontWeight","fontSize","OtherDayWeather","dayWeather","styles","Box","className","format","dt","src","weather","icon","alt","Typography","night","useTodayWeatherStyles","height","gridTemplateColumns","marginTop","TodayWeather","useStyles","container","maxWidth","overflow","gridWrapper","gridColumnGap","currentInfo","margin","currentInfoItem","currentInfoTitle","cityTime","dayWithHoursWrapper","dayHoursWrapper","flexWrap","gap","hoursBox","data","humidity","title","value","current","pressure","wind_speed","sunrise","sunset","Container","component","zonedTimeToUtc","Date","timezone","daily","map","elem","idx","_","Object","entries","mapByDay","hourly","e","i","style","transform","outHoursInfo","dispatch","citiesState","selectCitiesState","id","useParams","useEffect","fetchCityWeather","detailCityLoaded","SpinLoader","detailCityError","detailCity","outDetailCity","api","axios","baseURL","interceptors","request","use","config","params","appid","units","error","Promise","reject","fetchCities","createAsyncThunk","__","setCitiesLoaded","setCitiesError","fetchedCitiesPromises","fetchedCities","cities","city","promise","name","push","allSettled","allPromises","filteredCities","el","status","sortedCities","length","setCities","cityId","setDetailCityLoaded","coord","lon","lat","setDetailCity","response","setDetailCityError","checkForExistence","cityTitle","returnedData","hasError","message","state"],"sourceRoot":""}