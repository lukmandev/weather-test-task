{"version":3,"file":"static/js/332.d6b9a58e.chunk.js","mappings":"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","sources":["hooks/redux.ts","modules/home/components/CityItem/index.tsx","modules/home/components/AddCityModal.tsx","modules/home/pages/my-cities.tsx","http/api.ts","store/reducers/cities/actions.ts","store/reducers/cities/selectors.ts"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\n\nimport { AppDispatch, RootState } from \"~/store/reducer\";\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import {Card, CardActions, CardContent, Typography} from '@mui/material';\nimport {Link} from 'react-router-dom';\n\nimport {City} from '~/types/City';\n\ntype CityItemProps = {\n\titem: City;\n};\n\nconst CityItem = ({item}: CityItemProps) => {\n\treturn (\n\t\t<Card sx={{width: '100%', border: `1px solid black`}}>\n\t\t\t<CardContent>\n\t\t\t\t<Typography sx={{fontSize: 14}} color=\"text.secondary\" gutterBottom>\n\t\t\t\t\tИнформация\n\t\t\t\t</Typography>\n\t\t\t\t<Typography variant=\"h5\" component={Link} to={`/weather/${item.id}`}>\n\t\t\t\t\t{item.name}\n\t\t\t\t</Typography>\n\t\t\t\t<Typography sx={{mb: 1.5}} color=\"text.secondary\">\n\t\t\t\t\t{item.base}\n\t\t\t\t</Typography>\n\t\t\t\t<img\n\t\t\t\t\tstyle={{width: '100%'}}\n\t\t\t\t\tsrc={`http://openweathermap.org/img/wn//${item.weather[0].icon}@4x.png`}\n\t\t\t\t/>\n\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t{item.weather[0].main}\n\t\t\t\t\t<br />\n\t\t\t\t\t{item.weather[0].description}\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\tЧуствуется как: {item.main.feels_like}\n\t\t\t\t\t<br />\n\t\t\t\t\tВлажность: {item.main.humidity}\n\t\t\t\t\t<br />\n\t\t\t\t\tДавление: {item.main.pressure}\n\t\t\t\t\t<br />\n\t\t\t\t\tМаксимальная температура: {item.main.temp_max}\n\t\t\t\t\t<br />\n\t\t\t\t\tМинимальная температура: {item.main.temp_min}\n\t\t\t\t\t<br />\n\t\t\t\t</Typography>\n\t\t\t</CardContent>\n\t\t\t<CardActions>\n\t\t\t\t<Link to={`/weather/${item.id}`}>Посмотреть полную информацию</Link>\n\t\t\t</CardActions>\n\t\t</Card>\n\t);\n};\n\nexport default CityItem;\n","import {Box, Button, CircularProgress, Modal, TextField} from '@mui/material';\nimport {makeStyles} from '@mui/styles';\nimport {useForm} from 'react-hook-form';\nimport {yupResolver} from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n\nimport {useAppDispatch} from '~/hooks/redux';\nimport {checkForExistence} from '~/store/reducers/cities/actions';\nimport {addToStartToMyCities} from '~/store/reducers/cities/reducer';\nimport {City} from '~/types/City';\n\ntype AddCityModalProps = {\n\topen: boolean;\n\thandleClose: () => void;\n};\n\ntype IFormInput = {\n\ttitle: string;\n};\n\nconst useStyles = makeStyles({\n\tmodal: {\n\t\tposition: 'absolute' as 'absolute',\n\t\ttop: '50%',\n\t\tleft: '50%',\n\t\ttransform: 'translate(-50%, -50%)',\n\t\twidth: 400,\n\t\tborder: '2px solid #000',\n\t\tpadding: '40px',\n\t\tbackground: '#fff',\n\t},\n\tform: {\n\t\tdisplay: 'grid',\n\t\tgridTemplateColumns: '1fr',\n\t\tgridRowGap: '10px',\n\t\tposition: 'relative',\n\t},\n\tformProgress: {\n\t\tposition: 'absolute',\n\t\tleft: 0,\n\t\ttop: 0,\n\t\twidth: '100%',\n\t\theight: '100%',\n\t\tbackground: 'rgb(255, 255, 255, 0.6)',\n\t\tdisplay: 'grid',\n\t\tplaceItems: 'center',\n\t\tzIndex: '10000',\n\t},\n});\n\nconst schema = yup.object().shape({\n\ttitle: yup.string().required('Введите название города'),\n});\n\nconst AddCityModal = ({open, handleClose}: AddCityModalProps) => {\n\tconst dispatch = useAppDispatch();\n\tconst {\n\t\tregister,\n\t\tformState: {errors, isSubmitting},\n\t\thandleSubmit,\n\t\tsetError,\n\t\treset,\n\t} = useForm<IFormInput>({\n\t\tresolver: yupResolver(schema),\n\t\tmode: 'onBlur',\n\t});\n\tconst styles = useStyles();\n\n\tconst onSubmit = async (values: IFormInput) => {\n\t\tconst {error, data} = await dispatch(\n\t\t\tcheckForExistence(values.title)\n\t\t).unwrap();\n\t\tif (error.hasError) {\n\t\t\tsetError('title', {message: error.message});\n\t\t} else {\n\t\t\tdispatch(addToStartToMyCities(data as unknown as City));\n\t\t\treset();\n\t\t}\n\t};\n\treturn (\n\t\t<Modal open={open} onClose={handleClose}>\n\t\t\t<Box className={styles.modal}>\n\t\t\t\t<form className={styles.form} onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t\t{isSubmitting && (\n\t\t\t\t\t\t<Box className={styles.formProgress}>\n\t\t\t\t\t\t\t<CircularProgress />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t)}\n\t\t\t\t\t<TextField\n\t\t\t\t\t\terror={!!errors?.title}\n\t\t\t\t\t\tlabel={errors.title?.message}\n\t\t\t\t\t\tplaceholder=\"Введите название города на английском\"\n\t\t\t\t\t\t{...register('title')}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button variant=\"contained\" type=\"submit\">\n\t\t\t\t\t\tСоздать\n\t\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t</Box>\n\t\t</Modal>\n\t);\n};\n\nexport default AddCityModal;\n","import {Box, Button, Container, Typography} from '@mui/material';\nimport {makeStyles} from '@mui/styles';\nimport {useState} from 'react';\n\nimport {useAppSelector} from '~/hooks/redux';\nimport {selectCitiesState} from '~/store/reducers/cities/selectors';\nimport AddCityModal from '../components/AddCityModal';\nimport CityItem from '../components/CityItem';\n\nconst useStyles = makeStyles({\n\tcontainer: {\n\t\tpadding: '40px 15px',\n\t},\n\tgridWrapper: {\n\t\tdisplay: 'grid',\n\t\tgridTemplateColumns: '1fr 1fr 1fr',\n\t\tgridColumnGap: '20px',\n\t\tgridRowGap: '20px',\n\t},\n\ttopSide: {\n\t\tpadding: '40px 0',\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'flex-end',\n\t\talignItems: 'center',\n\t},\n});\n\nconst MyCities = () => {\n\tconst styles = useStyles();\n\tconst citiesState = useAppSelector(selectCitiesState);\n\tconst [isOpen, setModalOpen] = useState<boolean>(false);\n\n\tconst outCities = () => {\n\t\tif (!citiesState.myCities.length) {\n\t\t\treturn <Typography>There is no cities add it</Typography>;\n\t\t}\n\t\treturn (\n\t\t\t<Box className={styles.gridWrapper}>\n\t\t\t\t{citiesState.myCities.map((elem, i) => (\n\t\t\t\t\t<CityItem item={elem} key={i} />\n\t\t\t\t))}\n\t\t\t</Box>\n\t\t);\n\t};\n\n\tconst handleModalOpen = () => {\n\t\tsetModalOpen(true);\n\t};\n\n\tconst handleModalClose = () => {\n\t\tsetModalOpen(false);\n\t};\n\treturn (\n\t\t<Container className={styles.container}>\n\t\t\t<Box className={styles.topSide}>\n\t\t\t\t<Button variant=\"contained\" onClick={handleModalOpen}>\n\t\t\t\t\tOPEN MODAL\n\t\t\t\t</Button>\n\t\t\t</Box>\n\t\t\t{outCities()}\n\t\t\t<AddCityModal open={isOpen} handleClose={handleModalClose} />\n\t\t</Container>\n\t);\n};\n\nexport default MyCities;\n","import axios from 'axios';\n\nconst api = axios.create({\n\tbaseURL: 'https://api.openweathermap.org',\n});\n\napi.interceptors.request.use(\n\t(config) => {\n\t\tconfig.params = {\n\t\t\t...config.params,\n\t\t\tappid: 'f9a4d9ae1e4c03a60aae940410297e18',\n\t\t\tunits: 'metric',\n\t\t};\n\t\treturn config;\n\t},\n\t(error) => {\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport default api;\n","import {createAsyncThunk} from '@reduxjs/toolkit';\nimport _ from 'lodash';\n\nimport api from '~/http/api';\nimport cities from '~/data/cities.json';\nimport {\n\tsetCities,\n\tsetCitiesError,\n\tsetCitiesLoaded,\n\tsetDetailCity,\n\tsetDetailCityError,\n\tsetDetailCityLoaded,\n} from './reducer';\nimport {AxiosError} from 'axios';\n\nexport const fetchCities = createAsyncThunk(\n\t'fetchCities',\n\tasync (__, {dispatch}) => {\n\t\tdispatch(setCitiesLoaded(false));\n\t\tdispatch(setCitiesError(null));\n\t\tconst fetchedCitiesPromises: any = [];\n\t\tlet fetchedCities: any = [];\n\t\tfor (let i = 0; i < cities.length; i++) {\n\t\t\tconst city = cities[i];\n\t\t\tconst promise = api.get(`/data/2.5/weather?q=${city.name}&lang=ru`);\n\t\t\tfetchedCitiesPromises.push(promise);\n\t\t}\n\t\ttry {\n\t\t\tconst allPromises = await Promise.allSettled(fetchedCitiesPromises);\n\t\t\tconst filteredCities = _.filter(\n\t\t\t\tallPromises,\n\t\t\t\t(el: any) => el.status && el.value\n\t\t\t);\n\t\t\tfetchedCities = _.map(filteredCities, (el: any) => el.value.data);\n\t\t} catch (e) {}\n\t\tconst sortedCities = _.uniqBy(fetchedCities, (e: any) => e.id);\n\t\t!sortedCities.length &&\n\t\t\tdispatch(setCitiesError('Произошла какая то ошибка'));\n\t\tdispatch(setCities(sortedCities));\n\t\tdispatch(setCitiesLoaded(true));\n\t}\n);\n\nexport const fetchCityWeather = createAsyncThunk(\n\t'fetchCityWeather',\n\tasync (cityId: string, {dispatch}) => {\n\t\tdispatch(setDetailCityLoaded(false));\n\t\ttry {\n\t\t\tconst {\n\t\t\t\tdata: {\n\t\t\t\t\tcoord: {lon, lat},\n\t\t\t\t},\n\t\t\t} = await api.get(`/data/2.5/weather?id=${cityId}`);\n\t\t\tconst {data} = await api.get(\n\t\t\t\t`/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=minutely`\n\t\t\t);\n\t\t\tdispatch(setDetailCity(data));\n\t\t} catch (e) {\n\t\t\tconst error = e as AxiosError;\n\t\t\tif (error.response && error.response.status) {\n\t\t\t\tdispatch(setDetailCityError('Город не найден'));\n\t\t\t} else {\n\t\t\t\tdispatch(setDetailCityError('Произошла какая то ошибка'));\n\t\t\t}\n\t\t} finally {\n\t\t\tdispatch(setDetailCityLoaded(true));\n\t\t}\n\t}\n);\n\nexport const checkForExistence = createAsyncThunk(\n\t'checkForExistence',\n\tasync (cityTitle: string, __) => {\n\t\tconst returnedData = {\n\t\t\terror: {\n\t\t\t\thasError: false,\n\t\t\t\tmessage: '',\n\t\t\t},\n\t\t\tdata: null,\n\t\t};\n\n\t\ttry {\n\t\t\tconst {data} = await api.get(`/data/2.5/weather?q=${cityTitle}`);\n\t\t\treturnedData.data = data;\n\t\t} catch (e) {\n\t\t\treturnedData.error.hasError = true;\n\t\t\tconst error = e as AxiosError;\n\t\t\tif (error?.response?.status === 404) {\n\t\t\t\treturnedData.error.message = 'Такой город не найден';\n\t\t\t} else {\n\t\t\t\treturnedData.error.message = 'Произошла какая то ошибка';\n\t\t\t}\n\t\t} finally {\n\t\t\treturn returnedData;\n\t\t}\n\t}\n);\n","import { RootState } from \"~/store/reducer\";\n\nexport const selectCitiesState = (state: RootState) => state.cities;\n"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","item","sx","width","border","fontSize","color","gutterBottom","variant","component","Link","to","id","name","mb","base","style","src","weather","icon","main","description","feels_like","humidity","pressure","temp_max","temp_min","useStyles","makeStyles","modal","position","top","left","transform","padding","background","form","display","gridTemplateColumns","gridRowGap","formProgress","height","placeItems","zIndex","schema","yup","shape","title","required","open","handleClose","dispatch","useForm","resolver","yupResolver","mode","register","formState","errors","isSubmitting","handleSubmit","setError","reset","styles","onSubmit","values","checkForExistence","unwrap","error","data","hasError","message","addToStartToMyCities","Modal","onClose","Box","className","CircularProgress","TextField","label","placeholder","Button","type","container","gridWrapper","gridColumnGap","topSide","justifyContent","alignItems","citiesState","selectCitiesState","useState","isOpen","setModalOpen","Container","onClick","myCities","length","map","elem","i","CityItem","Typography","api","axios","baseURL","interceptors","request","use","config","params","appid","units","Promise","reject","fetchCities","createAsyncThunk","__","setCitiesLoaded","setCitiesError","fetchedCitiesPromises","fetchedCities","cities","city","promise","push","allSettled","allPromises","filteredCities","_","el","status","value","sortedCities","e","setCities","fetchCityWeather","cityId","setDetailCityLoaded","coord","lon","lat","setDetailCity","response","setDetailCityError","cityTitle","returnedData","state"],"sourceRoot":""}